import React, { useState } from "react";
import style from "./style.module.scss";
import { useLocation, useNavigate } from "react-router-dom";
import MDEditor from "@uiw/react-md-editor";
import plus from "../../assets/icons/create_task/plus.svg";
import cross from "../../assets/icons/create_task/cross.svg";

const CreateTask = () => {
  const [description, setDescription] = useState("");
  const [title, setTitle] = useState("");
  const [correctAnswer, setCorrectAnswer] = useState("");
  const [selectCheckResult, setSelectCheckResult] = useState(false);
  const [status, setStatus] = useState("active"); // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  const [validity, setValidity] = useState("true"); // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  const [terminalUsage, setTerminalUsage] = useState("on"); // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  const [commandUsage, setCommandUsage] = useState("on"); // –°—Ç–µ–π—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç–µ—Ä–º–∏–Ω–∞–ª–∞
  const [commandRestriction, setCommandRestriction] = useState("on"); // –°—Ç–µ–π—Ç –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
  const [errors, setErrors] = useState({
    title: "",
    description: "",
    correctAnswer: "",
  });

  const [fileCount, setFileCount] = useState(0);
  const [files, setFiles] = useState([]); // –°—Ç–µ–π—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤

  const navigate = useNavigate();

  /* ü§© –¢—É—Ç –º—ã –ø–æ–ª—É—á–∞–µ–º id –º–æ–¥—É–ª—è. –û—Ç —ç—Ç–æ–≥–æ –º–æ–∂–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å, —Å–æ–∑–¥–∞–µ–º –ª–∏ –º—ã –Ω–æ–≤—ã–π –º–æ–¥—É–ª—å –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π */
  const { state } = useLocation();

  console.log(state);

  const addFile = () => {
    setFiles([...files, { type: "", count: 0 }]); // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª —Å –ø—É—Å—Ç—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
  };

  const handleFileTypeChange = (index, value) => {
    const newFiles = [...files];
    newFiles[index].type = value;
    setFiles(newFiles);
  };

  const handleFileCountChange = (index, value) => {
    const newFiles = [...files];
    newFiles[index].count = value;
    setFiles(newFiles);
  };

  const validateFields = () => {
    const newErrors = {
      title: title.trim() ? "" : "–ü–æ–ª–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º",
      description: description.trim() ? "" : "–ü–æ–ª–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º",
      correctAnswer: correctAnswer.trim() ? "" : "–ü–æ–ª–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º",
    };
    setErrors(newErrors);
    return Object.values(newErrors).every((error) => !error);
  };

  const handleSave = () => {
    if (validateFields()) {
      navigate("/tasks");
    }
  };

  return (
    <aside className={style.create_task}>
      <div className="container__inner">
        <div className={style.create_task__wrapper}>
          <div className={style.create_task__top}>
            <h2>–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è</h2>

            <div className={style.create_task__top__buttons}>
              <button onClick={handleSave}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
              <button onClick={() => navigate("/tasks")}>–û—Ç–º–µ–Ω–∞</button>
            </div>
          </div>

          <div className={style.create_task__main}>
            <aside className={style.create_task__main__left}>
              <div className={style.create_task__title}>
                <label htmlFor="title">–¢–µ–º–∞—Ç–∏–∫–∞ –∑–∞–¥–∞–Ω–∏—è</label>
                <input
                  type="text"
                  id="title"
                  value={title}
                  onChange={(event) => setTitle(event.target.value)}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É –∑–∞–¥–∞–Ω–∏—è..."
                />
                {errors.title && <p className={style.error}>{errors.title}</p>}
              </div>

              <div className={style.create_task__text}>
                <p>–¢–µ–∫—Å—Ç –∑–∞–¥–∞–Ω–∏—è</p>
                <MDEditor value={description} onChange={setDescription} />
                {errors.description && (
                  <p className={style.error}>{errors.description}</p>
                )}
              </div>

              <div className={style.create_task__correct}>
                <p>–≠—Ç–∞–ª–æ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç</p>
                <textarea
                  onChange={(event) => setCorrectAnswer(event.target.value)}
                  value={correctAnswer}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –∫ –∑–∞–¥–∞–Ω–∏—é..."
                ></textarea>
                {errors.correctAnswer && (
                  <p className={style.error}>{errors.correctAnswer}</p>
                )}
              </div>

              <div className={style.create_task__status__inputs}>
                <p>–¢–∏–ø –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–¥–∞–Ω–∏—è</p>

                <div className={style.create_task__status__inputs__main}>
                  <div>
                    <input
                      type="radio"
                      id="commands"
                      name="type_task"
                      checked={!selectCheckResult}
                      onChange={() => setSelectCheckResult(false)}
                    />
                    <label htmlFor="commands">–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–∞–Ω–¥—ã</label>
                  </div>

                  <div>
                    <input
                      type="radio"
                      id="result"
                      checked={selectCheckResult}
                      onChange={() => setSelectCheckResult(true)}
                      name="type_task"
                    />
                    <label htmlFor="result">
                      –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
                    </label>
                  </div>
                </div>
              </div>

              {selectCheckResult ? (
                <React.Fragment>
                  {/* Inputs radio */}
                  <div className={style.create_task__status__inputs}>
                    <p>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞: –≤–∫–ª—é—á–µ–Ω–æ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)</p>
                  </div>

                  <div className={style.create_task__status__inputs}>
                    <p>–¢–∏–ø –∑–∞–¥–∞–Ω–∏—è</p>

                    <div className={style.create_task__status__inputs__main}>
                      <div>
                        <input
                          type="radio"
                          id="on"
                          name="terminalUsage"
                          checked={terminalUsage === "on"}
                          onChange={() => setTerminalUsage("on")}
                        />
                        <label htmlFor="on">–í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å</label>
                      </div>

                      <div>
                        <input
                          type="radio"
                          id="off"
                          name="terminalUsage"
                          checked={terminalUsage === "off"}
                          onChange={() => setTerminalUsage("off")}
                        />
                        <label htmlFor="off">
                          –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–æ–≤/—Ñ–∞–π–ª–æ–≤
                        </label>
                      </div>
                    </div>
                  </div>

                  <div className={style.create_task__status__inputs}>
                    <p>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥</p>

                    <div className={style.create_task__status__inputs__main}>
                      <div>
                        <input
                          type="radio"
                          id="commandOn"
                          name="commandRestriction"
                          checked={commandRestriction === "on"}
                          onChange={() => setCommandRestriction("on")}
                        />
                        <label htmlFor="commandOn">–í–∫–ª—é—á–µ–Ω–æ</label>
                      </div>

                      <div>
                        <input
                          type="radio"
                          id="commandOff"
                          name="commandRestriction"
                          checked={commandRestriction === "off"}
                          onChange={() => setCommandRestriction("off")}
                        />
                        <label htmlFor="commandOff">–û—Ç–∫–ª—é—á–µ–Ω–æ</label>
                      </div>
                    </div>
                  </div>

                  {/* !- Inputs radio */}

                  <div className={style.create_task__commands}>
                    <input
                      type="text"
                      placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é..."
                    />
                  </div>

                  {/* Files */}
                  <div className={style.create_task__file}>
                    <div className={style.create_task__file__top}>
                      <div className={style.create_task__file__top__button}>
                        <p>–§–∞–π–ª—ã</p>
                        <button onClick={addFile}>
                          <img src={plus} alt="plus" />
                        </button>
                      </div>

                      <p>
                        –í—ã–±–æ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–Ω–¥–æ–º–Ω–æ –ø–æ—Ä—è–¥–∫–µ –∏–∑
                        ‚Äú–•—Ä–∞–Ω–∏–ª–∏—â–∞ —Ñ–∞–π–ª–æ–≤‚Äù (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
                      </p>
                    </div>

                    <ul>
                      {files.map((file, index) => (
                        <li
                          key={index}
                          className={style.create_task__file__item}
                        >
                          <select
                            value={file.type}
                            onChange={(e) =>
                              handleFileTypeChange(index, e.target.value)
                            }
                          >
                            <option value="" disabled hidden>
                              –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ñ–∞–π–ª–∞
                            </option>
                            <option value="–¢–∏–ø 1">–¢–∏–ø —Ñ–∞–π–ª–∞ 1</option>
                            <option value="–¢–∏–ø 2">–¢–∏–ø —Ñ–∞–π–ª–∞ 2</option>
                            <option value="–¢–∏–ø 3">–¢–∏–ø —Ñ–∞–π–ª–∞ 3</option>
                            <option value="–¢–∏–ø 4">–¢–∏–ø —Ñ–∞–π–ª–∞ 4</option>
                          </select>

                          <div className={style.create_task__file__item__count}>
                            <p>–∫–ª-–≤–æ</p>
                            <input
                              type="number"
                              value={file.count}
                              onChange={(e) =>
                                handleFileCountChange(index, e.target.value)
                              }
                            />
                          </div>

                          <button
                            className={style.create_task__file__item__delete}
                          >
                            <img src={cross} alt="cross" />
                          </button>
                        </li>
                      ))}
                    </ul>

                    {files.length > 0 && (
                      <div className={style.create_task__file__item__path}>
                        <p>
                          –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å, –∫—É–¥–∞ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è –∑–∞–≥—Ä—É–∑–∫–∞
                          –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ñ–∞–π–ª–æ–≤.
                        </p>
                        <div
                          className={
                            style.create_task__file__item__path__default
                          }
                        >
                          <p>–ö–∞—Ç–∞–ª–æ–≥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: /home/$USER/Tasks.</p>
                          <p>
                            –ü—É—Ç—å —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ /home/$USER/Tasks.
                          </p>
                        </div>

                        <input type="text" placeholder="dir1/dir2" />
                      </div>
                    )}
                  </div>
                  {/* !- Files */}
                </React.Fragment>
              ) : (
                <div className={style.create_task__status__inputs}>
                  <p>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞</p>

                  <div className={style.create_task__status__inputs__main}>
                    <div>
                      <input
                        type="radio"
                        id="terminalOn"
                        name="terminalUsage"
                        checked={terminalUsage === "on"}
                        onChange={() => setTerminalUsage("on")}
                      />
                      <label htmlFor="terminalOn">–≤–∫–ª—é—á–µ–Ω–æ</label>
                    </div>

                    <div>
                      <input
                        type="radio"
                        id="terminalOff"
                        name="terminalUsage"
                        checked={terminalUsage === "off"}
                        onChange={() => setTerminalUsage("off")}
                      />
                      <label htmlFor="terminalOff">–æ—Ç–∫–ª—é—á–µ–Ω–æ</label>
                    </div>
                  </div>
                </div>
              )}
            </aside>
            <aside className={style.create_task__main__right}>
              <div className={style.create_task__status}>
                <div className={style.create_task__status__inputs}>
                  <p>–°—Ç–∞—Ç—É—Å –∑–∞–¥–∞–Ω–∏—è</p>

                  <div className={style.create_task__status__inputs__main}>
                    <div>
                      <input
                        type="radio"
                        id="active"
                        name="status"
                        checked={status === "active"}
                        onChange={() => setStatus("active")}
                      />
                      <label htmlFor="active">–¥–æ—Å—Ç—É–ø–Ω–æ</label>
                    </div>

                    <div>
                      <input
                        type="radio"
                        id="notactive"
                        name="status"
                        checked={status === "notactive"}
                        onChange={() => setStatus("notactive")}
                      />
                      <label htmlFor="notactive">–Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ</label>
                    </div>
                  </div>
                </div>

                <div className={style.create_task__status__inputs}>
                  <p>–°—Ç–∞—Ç—É—Å –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –∑–∞–¥–∞–Ω–∏—è</p>

                  <div className={style.create_task__status__inputs__main}>
                    <div>
                      <input
                        type="radio"
                        id="true"
                        name="bool"
                        checked={validity === "true"}
                        onChange={() => setValidity("true")}
                      />
                      <label htmlFor="true">true</label>
                    </div>

                    <div>
                      <input
                        type="radio"
                        id="false"
                        name="bool"
                        checked={validity === "false"}
                        onChange={() => setValidity("false")}
                      />
                      <label htmlFor="false">false</label>
                    </div>
                  </div>
                </div>

                <div className={style.create_task__tasks}>
                  <p>–ó–∞–¥–∞–Ω–∏—è</p>

                  <select>
                    <option value="" selected disabled hidden>
                      –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥—É–ª—å –∏–∑ —Å–ø–∏—Å–∫–∞
                    </option>
                    <option value="–ú–æ–¥—É–ª—å 1">–ú–æ–¥—É–ª—å 1</option>
                    <option value="–ú–æ–¥—É–ª—å 2">–ú–æ–¥—É–ª—å 2</option>
                    <option value="–ú–æ–¥—É–ª—å 3">–ú–æ–¥—É–ª—å 3</option>
                    <option value="–ú–æ–¥—É–ª—å 4">–ú–æ–¥—É–ª—å 4</option>
                  </select>
                </div>
              </div>
            </aside>
          </div>
        </div>
      </div>
    </aside>
  );
};

export default CreateTask;
